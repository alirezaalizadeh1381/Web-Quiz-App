@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
    Layout = null; // Using custom layout for this page
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - CodeTest</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&family=Source+Code+Pro:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-dark: #3a56e4;
            --dark: #1e2a78;
            --light: #f8f9fa;
            --gray: #6c757d;
            --code-bg: #0d1117;
            --success: #2ecc71;
            --error: #e74c3c;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Roboto', sans-serif;
            background: linear-gradient(135deg, #0f172a, #1e3a8a);
            color: var(--light);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }
        
        .register-container {
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 16px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            width: 100%;
            max-width: 480px;
            overflow: hidden;
            border: 1px solid rgba(66, 86, 178, 0.3);
            animation: fadeIn 0.6s ease-out;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .register-header {
            background: var(--code-bg);
            padding: 30px 20px;
            text-align: center;
            border-bottom: 2px solid var(--primary);
        }
        
        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 12px;
            margin-bottom: 15px;
        }
        
        .logo-icon {
            background: var(--primary);
            width: 44px;
            height: 44px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }
        
        h1 {
            font-size: 28px;
            font-weight: 700;
            background: linear-gradient(to right, #4361ee, #3a0ca3);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-family: 'Source Code Pro', monospace;
        }
        
        .tagline {
            color: #94a3b8;
            font-size: 15px;
            margin-top: 8px;
        }
        
        .register-form {
            padding: 30px;
        }
        
        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .input-group {
            margin-bottom: 20px;
        }
        
        .input-group.full-width {
            grid-column: span 2;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #cbd5e1;
            font-size: 14px;
        }
        
        .required:after {
            content: " *";
            color: var(--error);
        }
        
        .input-field {
            width: 100%;
            padding: 14px;
            background: rgba(15, 23, 42, 0.7);
            border: 1px solid #334155;
            border-radius: 8px;
            color: white;
            font-size: 15px;
            transition: all 0.3s;
        }
        
        .input-field:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }
        
        .input-field::placeholder {
            color: #64748b;
        }
        
        .password-container {
            position: relative;
        }
        
        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #64748b;
            cursor: pointer;
        }
        
        .password-strength {
            margin-top: 8px;
            height: 6px;
            background: #334155;
            border-radius: 3px;
            overflow: hidden;
        }
        
        .strength-meter {
            height: 100%;
            width: 0%;
            background: var(--error);
            transition: width 0.3s;
        }
        
        .password-rules {
            margin-top: 10px;
            font-size: 13px;
            color: #94a3b8;
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 8px;
        }
        
        .rule {
            display: flex;
            align-items: center;
            gap: 6px;
        }
        
        .rule i {
            font-size: 12px;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .rule.valid i {
            background: var(--success);
            color: white;
        }
        
        .rule.invalid i {
            background: #334155;
            color: #64748b;
        }
        
        .register-button {
            width: 100%;
            padding: 14px;
            background: var(--primary);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: background 0.3s;
            margin: 25px 0 15px;
        }
        
        .register-button:hover {
            background: var(--primary-dark);
        }
        
        .divider {
            text-align: center;
            position: relative;
            margin: 20px 0;
            color: #64748b;
        }
        
        .divider::before,
        .divider::after {
            content: "";
            position: absolute;
            top: 50%;
            width: 42%;
            height: 1px;
            background: linear-gradient(to right, transparent, #334155, transparent);
        }
        
        .divider::before {
            left: 0;
        }
        
        .divider::after {
            right: 0;
        }
        
        .google-button {
            width: 100%;
            padding: 12px;
            background: white;
            color: #4285f4;
            border: 1px solid #e2e8f0;
            border-radius: 8px;
            font-size: 15px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
        }
        
        .google-button:hover {
            background: #f8fafc;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }
        
        .login-link {
            text-align: center;
            margin-top: 25px;
            font-size: 14px;
            color: #94a3b8;
        }
        
        .login-link a {
            color: var(--primary);
            text-decoration: none;
            font-weight: 500;
            margin-left: 5px;
        }
        
        .login-link a:hover {
            text-decoration: underline;
        }
        
        /* Checkbox styling */
        input[type="checkbox"] {
            appearance: none;
            width: 18px;
            height: 18px;
            border: 1px solid #475569;
            border-radius: 4px;
            position: relative;
            cursor: pointer;
        }
        
        input[type="checkbox"]:checked {
            background: var(--primary);
            border-color: var(--primary);
        }
        
        input[type="checkbox"]:checked::after {
            content: "✓";
            position: absolute;
            color: white;
            font-size: 12px;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
        
        .terms {
            display: flex;
            gap: 8px;
            margin-top: 15px;
            font-size: 14px;
            color: #cbd5e1;
        }
        
        .terms a {
            color: var(--primary);
            text-decoration: none;
        }
        
        .terms a:hover {
            text-decoration: underline;
        }
        
        @@media (max-width: 600px) {
            .form-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .input-group.full-width {
                grid-column: span 1;
            }
            
            .password-rules {
                grid-template-columns: 1fr;
            }
        }
        
        @@media (max-width: 480px) {
            .register-container {
                border-radius: 12px;
            }
            
            .register-header {
                padding: 25px 15px;
            }
            
            .register-form {
                padding: 25px 20px;
            }
        }
    </style>
</head>
<body>
    <div class="register-container">
        <div class="register-header">
            <div class="logo">
                <div class="logo-icon">
                    <i class="fas fa-laptop-code"></i>
                </div>
                <h1>CodeTest</h1>
            </div>
            <p class="tagline">Create your account to test your programming skills</p>
        </div>
        
        <form id="registerForm" class="register-form" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <div class="form-grid">
                <div class="input-group">
                    <label for="Input_FirstName" class="required">First Name</label>
                    <input asp-for="Input.FirstName" class="input-field" placeholder="John" required />
                    <span asp-validation-for="Input.FirstName" class="text-danger"></span>
                </div>
                
                <div class="input-group">
                    <label for="Input_LastName" class="required">Last Name</label>
                    <input asp-for="Input.LastName" class="input-field" placeholder="Doe" required />
                    <span asp-validation-for="Input.LastName" class="text-danger"></span>
                </div>
                
                <div class="input-group full-width">
                    <label for="Input_Email" class="required">Email</label>
                    <input asp-for="Input.Email" class="input-field" placeholder="coder@example.com" required />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                
                <div class="input-group full-width">
                    <label for="Input_Password" class="required">Password</label>
                    <div class="password-container">
                        <input asp-for="Input.Password" class="input-field" placeholder="••••••••" required />
                        <span class="toggle-password" id="togglePassword">
                            <i class="far fa-eye"></i>
                        </span>
                    </div>
                    <div class="password-strength">
                        <div class="strength-meter" id="strengthMeter"></div>
                    </div>
                    <div class="password-rules">
                        <div class="rule" id="lengthRule">
                            <i class="fas fa-circle"></i>
                            <span>6+ characters</span>
                        </div>
                        <div class="rule" id="uppercaseRule">
                            <i class="fas fa-circle"></i>
                            <span>Uppercase letter</span>
                        </div>
                        <div class="rule" id="specialRule">
                            <i class="fas fa-circle"></i>
                            <span>Special character</span>
                        </div>
                        <div class="rule" id="numberRule">
                            <i class="fas fa-circle"></i>
                            <span>Number (optional)</span>
                        </div>
                    </div>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                
                <div class="input-group full-width">
                    <label for="Input_ConfirmPassword" class="required">Confirm Password</label>
                    <div class="password-container">
                        <input asp-for="Input.ConfirmPassword" class="input-field" placeholder="••••••••" required />
                        <span class="toggle-password" id="toggleConfirmPassword">
                            <i class="far fa-eye"></i>
                        </span>
                    </div>
                    <div id="passwordMatch" style="margin-top: 8px; font-size: 13px; display: none;">
                        <i class="fas fa-check-circle" style="color: var(--success);"></i>
                        <span style="color: var(--success);">Passwords match</span>
                    </div>
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
            </div>
            
            <div class="terms">
                <input type="checkbox" id="terms" name="terms" required />
                <label for="terms">I agree to the <a href="#">Terms of Service</a> and <a href="#">Privacy Policy</a></label>
            </div>
            
            <button type="submit" class="register-button">Create Account</button>
            
            <div class="divider">or sign up with</div>
            
            <button type="submit" class="google-button" name="provider" value="Google" title="Sign up using your Google account">
                <i class="fab fa-google" style="color: #4285F4;"></i>
                Sign up with Google
            </button>
            
            <div class="login-link">
                Already have an account? <a asp-page="./Login" asp-route-returnUrl="@Model.ReturnUrl">Sign in</a>
            </div>
        </form>
    </div>

    <script>
        // Toggle password visibility
        function setupPasswordToggle(passwordId, toggleId) {
            const toggle = document.getElementById(toggleId);
            const passwordField = document.getElementById(passwordId);
            
            if (!toggle || !passwordField) return;
            
            toggle.addEventListener('click', function() {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);
                
                this.innerHTML = type === 'password' 
                    ? '<i class="far fa-eye"></i>' 
                    : '<i class="far fa-eye-slash"></i>';
            });
        }
        
        // Password strength checker
        function checkPasswordStrength(password) {
            let strength = 0;
            const rules = {
                length: password.length >= 6,
                uppercase: /[A-Z]/.test(password),
                special: /[!#$%^&*(),.?":{}|<>]/.test(password),
                number: /[0-9]/.test(password)
            };
            
            // Update rule indicators
            if (document.getElementById('lengthRule')) {
                document.getElementById('lengthRule').className = rules.length ? 'rule valid' : 'rule invalid';
            }
            if (document.getElementById('uppercaseRule')) {
                document.getElementById('uppercaseRule').className = rules.uppercase ? 'rule valid' : 'rule invalid';
            }
            if (document.getElementById('specialRule')) {
                document.getElementById('specialRule').className = rules.special ? 'rule valid' : 'rule invalid';
            }
            if (document.getElementById('numberRule')) {
                document.getElementById('numberRule').className = rules.number ? 'rule valid' : 'rule invalid';
            }
            
            // Calculate strength (0-100)
            if (rules.length) strength += 25;
            if (rules.uppercase) strength += 25;
            if (rules.special) strength += 25;
            if (rules.number) strength += 25;
            
            // Update strength meter
            const meter = document.getElementById('strengthMeter');
            if (meter) {
                meter.style.width = strength + '%';
                meter.style.background = strength < 50 ? 'var(--error)' : 
                                         strength < 75 ? '#f39c12' : 
                                         'var(--success)';
            }
            
            return strength >= 75; // Require at least 75% strength
        }
        
        // Password match checker
        function checkPasswordMatch() {
            const password = document.getElementById('Input_Password')?.value;
            const confirmPassword = document.getElementById('Input_ConfirmPassword')?.value;
            const matchIndicator = document.getElementById('passwordMatch');
            
            if (password && confirmPassword && matchIndicator) {
                if (password === confirmPassword) {
                    matchIndicator.style.display = 'block';
                    return true;
                } else {
                    matchIndicator.style.display = 'none';
                    return false;
                }
            }
            return false;
        }
        
        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Setup password toggles
            setupPasswordToggle('Input_Password', 'togglePassword');
            setupPasswordToggle('Input_ConfirmPassword', 'toggleConfirmPassword');
            
            // Password strength real-time feedback
            const passwordField = document.getElementById('Input_Password');
            if (passwordField) {
                passwordField.addEventListener('input', function() {
                    checkPasswordStrength(this.value);
                });
            }
            
            // Password match real-time feedback
            const confirmPasswordField = document.getElementById('Input_ConfirmPassword');
            if (confirmPasswordField) {
                confirmPasswordField.addEventListener('input', checkPasswordMatch);
            }
            if (passwordField) {
                passwordField.addEventListener('input', checkPasswordMatch);
            }
        });
    </script>
    
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }
</body>
</html>